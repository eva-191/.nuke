# -----------------------------------------------
# menu.py
# Version: 1.0.0
# Last Updated: March 9th, 2020
# -----------------------------------------------


# ------------------------------------------------------------------------------------------------------
# GLOBAL IMPORTS :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ------------------------------------------------------------------------------------------------------

import nuke
import platform
import nukescripts

# Define where .nuke directory is on each OS's network.
Win_Dir = ''
MacOSX_Dir = '/Users/i-191/.nuke'
Linux_Dir = '/net/homes/echioche/.nuke'

# Automatically set global directory
if platform.system() == "Linux":
	dir = Linux_Dir
elif platform.system() == "Darwin":
	dir = MacOSX_Dir
elif platform.system() == "Windows":
	dir = Win_Dir
else:
	dir = None





# ------------------------------------------------------------------------------------------------------
# KNOB DEFAULTS ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ------------------------------------------------------------------------------------------------------



nuke.knobDefault('Merge2.bbox', 'B')
nuke.knobDefault('STMap.uv', 'rgb')
nuke.knobDefault('STMap.label', '[value filter]')
nuke.knobDefault('Tracker4.label', "Motion: [value transform]\nRef Frame: [value reference_frame]")
nuke.addOnUserCreate(lambda:nuke.thisNode()['reference_frame'].setValue(nuke.frame()), nodeClass='Tracker4')
nuke.addOnUserCreate(lambda:nuke.thisNode()['first_frame'].setValue(nuke.frame()), nodeClass='FrameHold')


# ------------------------------------------------------------------------------------------------------
# CUSTOM MENUS :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
# ------------------------------------------------------------------------------------------------------


utilitiesMenu = nuke.menu('Nuke').addMenu('Utilities')
utilitiesMenu.addCommand('Autocrop', 'nukescripts.autocrop()')

myGizmosMenu = nuke.menu('Nodes').addMenu('myGizmos', icon="myGizmos_bender.png")
myGizmosMenu.addCommand('Autocrop', 'nukescripts.autocrop()')



# ADD GIZMOS --------------------------------------------------------------------------------------------

myGizmosMenu.addCommand('MonochromePlus', 'nuke.createNode("MonochromePlus")')
myGizmosMenu.addCommand('mS_MarkerRemoval_Advanced', 'nuke.createNode("mS_MarkerRemoval_Advanced")')
myGizmosMenu.addCommand('Keychew', 'nuke.createNode("Keychew")')
myGizmosMenu.addCommand('EdgeSulu', 'nuke.createNode("EdgeSulu")')
myGizmosMenu.addCommand('ColourEdge', 'nuke.createNode("ColourEdge")')




# ADD PIXELFUDGER --------------------------------------------------------------------------------------

t=nuke.menu("Nodes")
u=t.addMenu("Pixelfudger", icon="PxF_Menu.png")

t.addCommand( "Pixelfudger/PxF_Bandpass", "nuke.createNode('PxF_Bandpass')", icon="PxF_Bandpass.png" ) 
t.addCommand( "Pixelfudger/PxF_ChromaBlur", "nuke.createNode('PxF_ChromaBlur')", icon="PxF_ChromaBlur.png") 
t.addCommand( "Pixelfudger/PxF_Distort", "nuke.createNode('PxF_Distort')", icon="PxF_Distort.png") 
t.addCommand( "Pixelfudger/PxF_Erode", "nuke.createNode('PxF_Erode')", icon="PxF_Erode.png")
t.addCommand( "Pixelfudger/PxF_Filler", "nuke.createNode('PxF_Filler')", icon="PxF_Filler.png") 
t.addCommand( "Pixelfudger/PxF_Grain", "nuke.createNode('PxF_Grain')", icon="PxF_Grain.png") 
t.addCommand( "Pixelfudger/PxF_HueSat", "nuke.createNode('PxF_HueSat')", icon="PxF_HueSat.png")  
t.addCommand( "Pixelfudger/PxF_IDefocus", "nuke.createNode('PxF_IDefocus')", icon="PxF_IDefocus.png")
t.addCommand( "Pixelfudger/PxF_KillSpill", "nuke.createNode('PxF_KillSpill')", icon="PxF_KillSpill.png") 
t.addCommand( "Pixelfudger/PxF_Line", "nuke.createNode('PxF_Line')", icon="PxF_Line.png" ) 
t.addCommand( "Pixelfudger/PxF_MergeWrap", "nuke.createNode('PxF_MergeWrap')", icon="PxF_MergeWrap.png" ) 
t.addCommand( "Pixelfudger/PxF_ScreenClean", "nuke.createNode('PxF_ScreenClean')", icon="PxF_ScreenClean.png")
